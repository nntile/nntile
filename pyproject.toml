[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nntile"
version = "1.0.0"
description = """
Framework for training large neural network in heterogeneous distributed-memory
systems."""
license = {text = "MIT"}
authors = [
    {name = "Aleksandr Mikhalev", email = "al.mikhalev@skoltech.ru"},
    {name = "Aleksandr Katrutsa", email = "a.katrutsa@skoltech.ru"},
    {name = "Konstantin Sozykin", email = "ko.sozykin@skoltech.ru"},
    {name = "Daniel Bershatsky", email = "d.bershatsky2@skoltech.ru"},
    {name = "Ivan Oseledets", email = "i.oseledets@skoltech.ru"},
]
maintainers = [
    {name = "Daniel Bershatsky", email = "d.bershatsky2@skoltech.ru"},
    {name = "Aleksandr Mikhalev", email = "al.mikhalev@skoltech.ru"},
]
readme = {file = "README.md", content-type = "text/markdown"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: GPU",
    "Environment :: GPU :: NVIDIA CUDA",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: Other/Proprietary License",
    "Natural Language :: English",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: C",
    "Programming Language :: C++",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Typing :: Typed",
]
dependencies = [
    "fastapi",
    "pydantic",
    "numpy",
    "typing_extensions>=4.6.0; python_version<'3.12'",
    "uvicorn",
]
requires-python = ">=3.10,<4"

[project.optional-dependencies]
dev = ["isort", "mypy", "ruff"]
test = [
    "datasets", "pytest>=8.2", "scipy", "torch", "torchvision", "transformers",
]

[project.urls]
Homepage = "https://github.com/nntile/nntile"
Repository = "https://github.com/nntile/nntile.git"

[tool.isort]
combine_as_imports = true
known_first_party = ["nntile", "gpt2_config", "huggingface_activations"]
multi_line_output = 4

[tool.mypy]
no_implicit_optional = true

show_column_numbers = true
show_error_codes = true
show_error_context = false

warn_unused_ignores = true

plugins = ["numpy.typing.mypy_plugin"]

[tool.pytest.ini_options]
minversion = "8.2"
addopts = "-ra -q -m 'not slow'"
testpaths = ["wrappers/python/tests"]
markers = [
    "slow: slow tests (deselect with '-m \"not slow\"')",
    "cuda: tests that requires CUDA",
]
filterwarnings = ["ignore::DeprecationWarning"]

[tool.pytest-dirty]
packages = [
    "datasets", "fastapi", "numpy", "pydantic", "pytest", "scipy", "torch",
    "torchvision", "transformers", "uvicorn",
]
sources = ["wrappers/python/nntile"]
targets = ["wrappers/python/tests"]

[tool.pytest-dirty.dependency]
"wrappers/python/tests/**/test_*.py" = ["wrappers/python/tests/conftest.py"]

[tool.ruff]
indent-width = 4
line-length = 79

[tool.ruff.lint]
select = ["E", "F", "NPY", "PYI", "PTH"]
ignore = ["PTH123"]
preview = true

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.pycodestyle]
max-doc-length = 79
max-line-length = 79

[tool.setuptools]
include-package-data = false
platforms = ["Linux"]
zip-safe = false

[tool.setuptools.packages.find]
where = "wrappers/python"
include = ["nntile*"]
